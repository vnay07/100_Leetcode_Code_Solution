//Problem Link: https://leetcode.com/problems/3sum/

//Solution
class Solution {
public:
    vector<vector<int>> threeSum(vector<int>& a) {
        int n =a.size();
        vector<vector<int>> res;
        //set<vector<int>> sv;
        sort(a.begin(),a.end());
        for(int i=0;i<n-2;i++){
            if(i!=0 && a[i]==a[i-1])
                continue;
            int l=i+1, r=n-1;
            while(l<r){
                if(a[l]+a[r] == -a[i]){
                    res.push_back({a[i],a[l],a[r]});                  
                    l++, r--;
                    if(l>=r){
                        break;
                    }
                    while(l!=1 && a[l] == a[l-1]){
                        l++;
                        if(l>=r){
                            break;
                        }
                    }
                    while(r!=n-1 && a[r] == a[r+1]){
                        r--;
                        if(l>=r){
                            break;
                        }
                    }
                }
                else if(a[l]+a[r] > -a[i]){
                    r--;
                }
                else{
                    l++;
                }
            }
        }
       
        return res;
    }
};
