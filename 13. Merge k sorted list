//Problem Link: https://leetcode.com/problems/merge-k-sorted-lists/

//Solution

/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* insertNewNode(ListNode* root, int key){
        ListNode *temp = new ListNode();
        temp->val = key;
        temp->next = NULL;
        if(root==NULL){
            return temp;
        }
        ListNode *itr = root;
        while(itr->next!=NULL)
            itr = itr->next;
        itr->next = temp;
        return root;
    }
    ListNode* mergeKLists(vector<ListNode*>& lists) {
        ListNode* resList = NULL;
        int n = lists.size();
        priority_queue<int, vector<int>, greater<int> > minH;
        for(int i=0;i<n;i++){
            ListNode* temp = lists[i];
            while(temp!=NULL){
                minH.push(temp->val);
                temp = temp->next;
            }
        }
        while(!minH.empty()){
            resList = insertNewNode(resList, minH.top());
            minH.pop();
        }
        return resList;
    }
};
